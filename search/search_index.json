{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"title changed!","text":"<p>Hello world!</p>"},{"location":"readme-copy/","title":"MkDocs template","text":"<p>A template to build documentation pages using MkDocs, especifically using the Material for MkDocs theme and the PyMdown extensions.</p>"},{"location":"readme-copy/#getting-started","title":"Getting started","text":"<p>Clone this repository by clicking on the top right button, <code>Use this template</code>:</p> <p></p> <p>You can decide which organization or account to host the new repository. Don't forget to check the <code>Include all branches</code> button.</p> <p></p>"},{"location":"readme-copy/#the-configuration-file","title":"The configuration file","text":"<p>The configuration file should appear in the root of your project with the name <code>mkdocs.yml</code>. Here, you can control the structure and customization (with different themes, extensions, assets, etc.) of your page.</p> <p>I tried adding some of the most useful configurations and comments in the <code>mkdocs.yml</code>, but it is a good idea to visit the (amazing) documentation page of Material for MkDocs.</p>"},{"location":"readme-copy/#adding-pages","title":"Adding pages","text":"<p>The pages in MkDocs are written in Markdown and are found in the folder <code>docs</code>. The structure is defined in the <code>mkdocs.yml</code> under the <code>nav</code> key.</p>"},{"location":"readme-copy/#local-development","title":"Local development","text":"<p>In order to develop and write the documentation page, you only need an OS with Python 3.x. Then, you have to:</p> <ul> <li>Create a virtual environment (either with venv or conda). In my case I used Ubuntu 22.04 to setup my environment: <pre><code>python3 -m venv .venv\nsource .venv/bin/activate\n</code></pre></li> <li>Make sure <code>pip</code> is upgraded: <pre><code>pip install --upgrade pip\n</code></pre></li> <li>Install the dependencies: <pre><code>pip install -r requirements_docs.txt\n</code></pre></li> <li>Run the MkDocs page: <pre><code>mkdocs serve\n</code></pre></li> </ul> <p>You will get an output which looks like this: <pre><code>INFO    -  Building documentation...\nINFO    -  Cleaning site directory\nINFO    -  [14:07:47] Watching paths for changes: 'docs', 'mkdocs.yml'\nINFO    -  [14:07:47] Serving on http://127.0.0.1:8000/\n</code></pre></p> <p>Simply click on the local address (http://127.0.0.1:8000/) to see the page launched.</p> <p>Everytime you modify and save your files, the MkDocs page will automatically update with the latest changes.</p>"},{"location":"readme-copy/#github-page","title":"Github page","text":"<p>Once the MkDocs page is ready, you can push the changes into your main branch. </p> <p>The pipeline defined in <code>.github/workflows/mkdocs-deploy.yml</code> will deploy the MkDocs page on the Github page of your repository. This is in the branch called <code>gh-page</code> (this is the reason why the button <code>Include all branches</code> should be checked). Everytime someone pushes changes into the <code>main</code> branch, the pipeline will update the MkDocs page.</p> <p>The Github/MkDocs page have the format: https://.github.io//"}]}